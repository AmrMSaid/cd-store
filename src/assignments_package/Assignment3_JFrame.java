/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assignments_package;

import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Amr
 */
public class Assignment3_JFrame extends javax.swing.JFrame {

    ArrayList<CD> cds = new ArrayList<>();
    JOptionPane j = new JOptionPane();

    /**
     * Creates new form Assignment3_JFrame
     */
    public Assignment3_JFrame() {
        initComponents();
        movieRadioBtn.setSelected(true);
        noOfEpisodesTxt.setEnabled(false);
    }

    private void rent(String name) {
        for (int i = 0; i < cds.size(); i++) {
            CD cd = cds.get(i);
            if (name.equals(cd.getName())) {
                if (cd.getQuantity() > 0) {
                    cd.setQuantity(cd.getQuantity() - 1);
                    JOptionPane.showMessageDialog(j, "Rented.", "Message", JOptionPane.INFORMATION_MESSAGE);
                } else if (cd.getQuantity() == 0) {
                    JOptionPane.showMessageDialog(j, "This CD is out of stock.", "Message", JOptionPane.INFORMATION_MESSAGE);
                }
                return;
            }
        }
        JOptionPane.showMessageDialog(j, "This CD doesn't exist in stock.", "Message", JOptionPane.INFORMATION_MESSAGE);
    }

    private void retrieve(String name) {
        for (int i = 0; i < cds.size(); i++) {
            CD cd = cds.get(i);
            if (name.equals(cd.getName())) {
                JOptionPane.showMessageDialog(j, "Name: " + cd.getName() + "\nQuantity: " + cd.getQuantity(), "CD Data", JOptionPane.INFORMATION_MESSAGE);
                
                return;
            }
        }
        JOptionPane.showMessageDialog(j, "The CD doesn't exist.", "Error", JOptionPane.ERROR_MESSAGE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        CDNameTxt = new javax.swing.JTextField();
        quantityTxt = new javax.swing.JTextField();
        movieDurationTxt = new javax.swing.JTextField();
        noOfEpisodesTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        movieRadioBtn = new javax.swing.JRadioButton();
        seriesRadioBtn = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        addNewCDBtn = new javax.swing.JButton();
        rentTheCDBtn = new javax.swing.JButton();
        retreiveCDInfoBtn = new javax.swing.JButton();
        increaseCDQuantityBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("CD Information");

        jLabel2.setText("CD Name");

        jLabel3.setText("Quantity");

        buttonGroup1.add(movieRadioBtn);
        movieRadioBtn.setText("Movie");
        movieRadioBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        buttonGroup1.add(seriesRadioBtn);
        seriesRadioBtn.setText("Series");
        seriesRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seriesRadioBtnActionPerformed(evt);
            }
        });

        jLabel4.setText("Movie Duration");

        jLabel5.setText("Number of Episodes");

        addNewCDBtn.setText("Add New CD");
        addNewCDBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewCDBtnActionPerformed(evt);
            }
        });

        rentTheCDBtn.setText("Rent the CD");
        rentTheCDBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rentTheCDBtnActionPerformed(evt);
            }
        });

        retreiveCDInfoBtn.setText("Retreive CD Info");
        retreiveCDInfoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retreiveCDInfoBtnActionPerformed(evt);
            }
        });

        increaseCDQuantityBtn.setText("Increase CD Quantity");
        increaseCDQuantityBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseCDQuantityBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(CDNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quantityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(addNewCDBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(movieRadioBtn, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(movieDurationTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(rentTheCDBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5)
                            .addComponent(seriesRadioBtn)
                            .addComponent(noOfEpisodesTxt)
                            .addComponent(retreiveCDInfoBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(increaseCDQuantityBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CDNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(movieRadioBtn)
                    .addComponent(seriesRadioBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(movieDurationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(noOfEpisodesTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addNewCDBtn)
                    .addComponent(retreiveCDInfoBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rentTheCDBtn)
                    .addComponent(increaseCDQuantityBtn))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void seriesRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seriesRadioBtnActionPerformed
        // TODO add your handling code here:
        movieDurationTxt.setEnabled(false);
        noOfEpisodesTxt.setEnabled(true);
    }//GEN-LAST:event_seriesRadioBtnActionPerformed

    private void addNewCDBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewCDBtnActionPerformed
        // TODO add your handling code here:
        if (seriesRadioBtn.isSelected()) {
            if (CDNameTxt.getText().equals("") || quantityTxt.getText().equals("") || noOfEpisodesTxt.getText().equals("")) {
                JOptionPane.showMessageDialog(j, "Please, enter all the series info.", "Error", JOptionPane.ERROR_MESSAGE);
                
                return;
            }
            try {
                Integer.parseInt(quantityTxt.getText());
                Integer.parseInt(noOfEpisodesTxt.getText());
            } catch (NumberFormatException n) {
                JOptionPane.showMessageDialog(j, "You must enter the quantity and number of episodes as numbers.", "Exception", JOptionPane.ERROR_MESSAGE);
                
                return;
            }
            Series s = new Series(CDNameTxt.getText(), Integer.parseInt(quantityTxt.getText()), Integer.parseInt(noOfEpisodesTxt.getText()));
            cds.add(s);
            JOptionPane.showMessageDialog(j, "The Series is added successfully.", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else if (movieRadioBtn.isSelected()) {
            if (CDNameTxt.getText().equals("") || quantityTxt.getText().equals("") || movieDurationTxt.getText().equals("")) {
                JOptionPane.showMessageDialog(j, "Please, enter all the movie info.", "Error", JOptionPane.ERROR_MESSAGE);
                
                return;
            }
            try {
                Integer.parseInt(quantityTxt.getText());
                Integer.parseInt(movieDurationTxt.getText());
            } catch (NumberFormatException n) {
                JOptionPane.showMessageDialog(j, "You must enter the quantity and movie duration as numbers.", "Exception", JOptionPane.ERROR_MESSAGE);
                
                return;
            }
            Movie m = new Movie(CDNameTxt.getText(), Integer.parseInt(quantityTxt.getText()), Integer.parseInt(movieDurationTxt.getText()));
            cds.add(m);
            JOptionPane.showMessageDialog(j, "The Movie is added successfully.", "Info", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_addNewCDBtnActionPerformed

    private void rentTheCDBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rentTheCDBtnActionPerformed
        // TODO add your handling code here:
        rent(CDNameTxt.getText());
    }//GEN-LAST:event_rentTheCDBtnActionPerformed

    private void retreiveCDInfoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retreiveCDInfoBtnActionPerformed
        // TODO add your handling code here:
        retrieve(CDNameTxt.getText());
    }//GEN-LAST:event_retreiveCDInfoBtnActionPerformed

    private void increaseCDQuantityBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseCDQuantityBtnActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < cds.size(); i++) {
            CD cd = cds.get(i);
            if (CDNameTxt.getText().equals(cd.getName())) {
                try {
                    Integer.parseInt(quantityTxt.getText());
                } catch (NumberFormatException n) {
                    JOptionPane.showMessageDialog(j, "You must enter the quantity as a number.", "Exception", JOptionPane.ERROR_MESSAGE);

                    return;
                }
                cd.increaseTheCDQuantityBy(Integer.parseInt(quantityTxt.getText()));
                JOptionPane.showMessageDialog(j, "The quantity is increased.", "Message", JOptionPane.INFORMATION_MESSAGE);

                return;
            }
        }
        JOptionPane.showMessageDialog(j, "The CD doesn't exist.", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_increaseCDQuantityBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Assignment3_JFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Assignment3_JFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Assignment3_JFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Assignment3_JFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Assignment3_JFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CDNameTxt;
    private javax.swing.JButton addNewCDBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton increaseCDQuantityBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField movieDurationTxt;
    private javax.swing.JRadioButton movieRadioBtn;
    private javax.swing.JTextField noOfEpisodesTxt;
    private javax.swing.JTextField quantityTxt;
    private javax.swing.JButton rentTheCDBtn;
    private javax.swing.JButton retreiveCDInfoBtn;
    private javax.swing.JRadioButton seriesRadioBtn;
    // End of variables declaration//GEN-END:variables
}

abstract class CD {

    private final String name;
    private int quantity;

    public CD(String name, int quantity) {
        this.name = name;
        this.quantity = quantity;
    }

    public final void increaseTheCDQuantityBy(int additionalQuantity) {
        quantity += additionalQuantity;
    }

    public String getName() {
        return name;
    }

    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    public int getQuantity() {
        return quantity;
    }
}

class Movie extends CD {

    private float duration;

    public Movie(String name, int quantity, float duration) {
        super(name, quantity);
        this.duration = duration;
    }

    public float getDuration() {
        return duration;
    }
}

class Series extends CD {

    private int numberOfEpisodes;

    public Series(String name, int quantity, int numberOfEpisodes) {
        super(name, quantity);
        this.numberOfEpisodes = numberOfEpisodes;
    }

    public int getNumberOfEpisodes() {
        return numberOfEpisodes;
    }
}
